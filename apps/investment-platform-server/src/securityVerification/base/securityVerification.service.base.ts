/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SecurityVerification as PrismaSecurityVerification,
} from "@prisma/client";

export class SecurityVerificationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SecurityVerificationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.securityVerification.count(args);
  }

  async securityVerifications(
    args: Prisma.SecurityVerificationFindManyArgs
  ): Promise<PrismaSecurityVerification[]> {
    return this.prisma.securityVerification.findMany(args);
  }
  async securityVerification(
    args: Prisma.SecurityVerificationFindUniqueArgs
  ): Promise<PrismaSecurityVerification | null> {
    return this.prisma.securityVerification.findUnique(args);
  }
  async createSecurityVerification(
    args: Prisma.SecurityVerificationCreateArgs
  ): Promise<PrismaSecurityVerification> {
    return this.prisma.securityVerification.create(args);
  }
  async updateSecurityVerification(
    args: Prisma.SecurityVerificationUpdateArgs
  ): Promise<PrismaSecurityVerification> {
    return this.prisma.securityVerification.update(args);
  }
  async deleteSecurityVerification(
    args: Prisma.SecurityVerificationDeleteArgs
  ): Promise<PrismaSecurityVerification> {
    return this.prisma.securityVerification.delete(args);
  }
}
